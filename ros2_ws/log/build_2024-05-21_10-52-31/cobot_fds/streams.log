[0.019s] Invoking command in '/workspace/ros2_ws/build/cobot_fds': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/iron /usr/bin/cmake --build /workspace/ros2_ws/build/cobot_fds -- -j8 -l8
[0.085s] [35m[1mConsolidate compiler generated dependencies of target cobot_drive_main[0m
[0.120s] [ 20%] [32mBuilding CXX object CMakeFiles/cobot_drive_main.dir/src/cobot_drive_main.cpp.o[0m
[3.924s] In file included from [01m[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13[m[K,
[3.924s]                  from [01m[K/usr/include/c++/11/algorithm:74[m[K,
[3.924s]                  from [01m[K/workspace/ros2_ws/cobot_fds/include/drive.h:29[m[K,
[3.925s]                  from [01m[K/workspace/ros2_ws/cobot_fds/include/cobot_drive_main.hpp:3[m[K,
[3.925s]                  from [01m[K/workspace/ros2_ws/cobot_fds/src/cobot_drive_main.cpp:22[m[K:
[3.925s] /usr/include/c++/11/functional: In instantiation of â€˜[01m[Kstruct std::_Bind_check_arity<void (cobotDriveMain::*)(), cobotDriveMain*, const std::_Placeholder<1>&>[m[Kâ€™:
[3.925s] [01m[K/usr/include/c++/11/functional:768:12:[m[K   required from â€˜[01m[Kstruct std::_Bind_helper<false, void (cobotDriveMain::*)(), cobotDriveMain*, const std::_Placeholder<1>&>[m[Kâ€™
[3.925s] [01m[K/usr/include/c++/11/functional:789:5:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (cobotDriveMain::*)(); _BoundArgs = {cobotDriveMain*, const std::_Placeholder<1>&}][m[Kâ€™
[3.925s] [01m[K/workspace/ros2_ws/cobot_fds/src/cobot_drive_main.cpp:63:51:[m[K   required from here
[3.926s] [01m[K/usr/include/c++/11/functional:756:21:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: Wrong number of arguments for pointer-to-member
[3.926s]   755 |       static_assert(_Varargs::[01;31m[Kvalue[m[K
[3.926s]       |                               [01;31m[K~~~~~[m[K
[3.926s]   756 | [01;31m[K                    ? sizeof...(_BoundArgs) >= _Arity::value + 1[m[K
[3.926s]       |                     [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[3.926s]   757 | [01;31m[K                    : sizeof...(_BoundArgs) == _Arity::value + 1[m[K,
[3.927s]       |                     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[3.927s] [01m[K/usr/include/c++/11/functional:756:21:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(false ? (2 >= (((long unsigned int)std::integral_constant<long unsigned int, 0>::value) + 1)) : (2 == (((long unsigned int)std::integral_constant<long unsigned int, 0>::value) + 1)))[m[Kâ€™ evaluates to false
[5.385s] In file included from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/callback_group.hpp:30[m[K,
[5.386s]                  from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[5.386s]                  from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[5.386s]                  from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[5.387s]                  from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[5.387s]                  from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[5.387s]                  from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[5.387s]                  from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[5.387s]                  from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/rclcpp.hpp:167[m[K,
[5.388s]                  from [01m[K/workspace/ros2_ws/cobot_fds/include/cobot_drive_main.hpp:6[m[K,
[5.388s]                  from [01m[K/workspace/ros2_ws/cobot_fds/src/cobot_drive_main.cpp:22[m[K:
[5.388s] /opt/ros/iron/include/rclcpp/rclcpp/timer.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™:
[5.388s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:273:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.388s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:270:3:[m[K   required from here
[5.388s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:287:14:[m[K [01;31m[Kerror: [m[Kno match for call to â€˜[01m[K(std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>) ()[m[Kâ€™
[5.389s]   287 |     [01;31m[Kcallback_()[m[K;
[5.389s]       |     [01;31m[K~~~~~~~~~^~[m[K
[5.389s] In file included from [01m[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13[m[K,
[5.389s]                  from [01m[K/usr/include/c++/11/algorithm:74[m[K,
[5.389s]                  from [01m[K/workspace/ros2_ws/cobot_fds/include/drive.h:29[m[K,
[5.390s]                  from [01m[K/workspace/ros2_ws/cobot_fds/include/cobot_drive_main.hpp:3[m[K,
[5.390s]                  from [01m[K/workspace/ros2_ws/cobot_fds/src/cobot_drive_main.cpp:22[m[K:
[5.390s] [01m[K/usr/include/c++/11/functional:501:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) [with _Args = {_Args ...}; _Result = _Result; _Functor = void (cobotDriveMain::*)(); _Bound_args = {cobotDriveMain*, std::_Placeholder<1>}][m[Kâ€™
[5.390s]   501 |         [01;36m[Koperator[m[K()(_Args&&... __args)
[5.390s]       |         [01;36m[K^~~~~~~~[m[K
[5.390s] [01m[K/usr/include/c++/11/functional:501:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.391s] /usr/include/c++/11/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [with _Fn = void (cobotDriveMain::*)(); _CallArgs = std::tuple<>; _BArgs = {cobotDriveMain*, std::_Placeholder<1>}; _Functor = void (cobotDriveMain::*)(); _Bound_args = {cobotDriveMain*, std::_Placeholder<1>}][m[Kâ€™:
[5.391s] [01m[K/usr/include/c++/11/functional:468:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs> using _Res_type = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<_Functor, _CallArgs, _Bound_args ...> [with _CallArgs = std::tuple<>; _Functor = void (cobotDriveMain::*)(); _Bound_args = {cobotDriveMain*, std::_Placeholder<1>}][m[Kâ€™
[5.391s] [01m[K/usr/include/c++/11/functional:498:9:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.391s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:273:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.391s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:270:3:[m[K   required from here
[5.391s] [01m[K/usr/include/c++/11/functional:460:13:[m[K [01;31m[Kerror: [m[Kno match for call to â€˜[01m[K(std::_Mu<std::_Placeholder<1>, false, true>) (std::_Placeholder<1>&, std::tuple<>&)[m[Kâ€™
[5.392s]   460 |             [01;31m[K_Mu<typename remove_cv<_BoundArg>::type>()[m[K(
[5.392s]       |             [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[5.392s] [01m[K/usr/include/c++/11/functional:363:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tuple> std::_Safe_tuple_element_t<(std::is_placeholder<_Tp>::value - 1), _Tuple>&& std::_Mu<_Arg, false, true>::operator()(const volatile _Arg&, _Tuple&) const volatile [with _Tuple = _Tuple; _Arg = std::_Placeholder<1>][m[Kâ€™
[5.392s]   363 |         [01;36m[Koperator[m[K()(const volatile _Arg&, _Tuple& __tuple) const volatile
[5.392s]       |         [01;36m[K^~~~~~~~[m[K
[5.392s] [01m[K/usr/include/c++/11/functional:363:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.393s] /usr/include/c++/11/functional: In substitution of â€˜[01m[Ktemplate<long unsigned int __i, class _Tuple> using _Safe_tuple_element_t = typename std::enable_if<(__i < std::tuple_size<_Tuple>::value), std::tuple_element<__i, _Tuple> >::type::type [with long unsigned int __i = 0; _Tuple = std::tuple<>][m[Kâ€™:
[5.393s] [01m[K/usr/include/c++/11/functional:363:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tuple> std::_Safe_tuple_element_t<0, _Tuple>&& std::_Mu<std::_Placeholder<1>, false, true>::operator()<_Tuple>(const volatile std::_Placeholder<1>&, _Tuple&) const volatile [with _Tuple = std::tuple<>][m[Kâ€™
[5.393s] [01m[K/usr/include/c++/11/functional:460:6:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [with _Fn = void (cobotDriveMain::*)(); _CallArgs = std::tuple<>; _BArgs = {cobotDriveMain*, std::_Placeholder<1>}; _Functor = void (cobotDriveMain::*)(); _Bound_args = {cobotDriveMain*, std::_Placeholder<1>}][m[Kâ€™
[5.393s] [01m[K/usr/include/c++/11/functional:468:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs> using _Res_type = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<_Functor, _CallArgs, _Bound_args ...> [with _CallArgs = std::tuple<>; _Functor = void (cobotDriveMain::*)(); _Bound_args = {cobotDriveMain*, std::_Placeholder<1>}][m[Kâ€™
[5.393s] [01m[K/usr/include/c++/11/functional:498:9:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.393s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:273:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.394s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:270:3:[m[K   required from here
[5.394s] [01m[K/usr/include/c++/11/functional:274:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::tuple_element<0, std::tuple<> > >[m[Kâ€™
[5.394s]   274 |     using [01;31m[K_Safe_tuple_element_t[m[K
[5.394s]       |           [01;31m[K^~~~~~~~~~~~~~~~~~~~~[m[K
[5.394s] /opt/ros/iron/include/rclcpp/rclcpp/timer.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™:
[5.394s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:273:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.395s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:270:3:[m[K   required from here
[5.395s] [01m[K/usr/include/c++/11/functional:513:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) const [with _Args = {_Args ...}; _Result = _Result; _Functor = void (cobotDriveMain::*)(); _Bound_args = {cobotDriveMain*, std::_Placeholder<1>}][m[Kâ€™
[5.395s]   513 |         [01;36m[Koperator[m[K()(_Args&&... __args) const
[5.395s]       |         [01;36m[K^~~~~~~~[m[K
[5.395s] [01m[K/usr/include/c++/11/functional:513:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.395s] /usr/include/c++/11/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [with _Fn = void (cobotDriveMain::* const)(); _CallArgs = std::tuple<>; _BArgs = {cobotDriveMain* const, const std::_Placeholder<1>}; _Functor = void (cobotDriveMain::*)(); _Bound_args = {cobotDriveMain*, std::_Placeholder<1>}][m[Kâ€™:
[5.395s] [01m[K/usr/include/c++/11/functional:475:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using _Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [with _CallArgs = std::tuple<>; __cv_quals = std::add_const; _Functor = void (cobotDriveMain::*)(); _Bound_args = {cobotDriveMain*, std::_Placeholder<1>}][m[Kâ€™
[5.396s] [01m[K/usr/include/c++/11/functional:510:9:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.396s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:273:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.396s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:270:3:[m[K   required from here
[5.396s] [01m[K/usr/include/c++/11/functional:460:13:[m[K [01;31m[Kerror: [m[Kno match for call to â€˜[01m[K(std::_Mu<std::_Placeholder<1>, false, true>) (const std::_Placeholder<1>&, std::tuple<>&)[m[Kâ€™
[5.396s]   460 |             [01;31m[K_Mu<typename remove_cv<_BoundArg>::type>()[m[K(
[5.396s]       |             [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[5.396s] [01m[K/usr/include/c++/11/functional:363:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tuple> std::_Safe_tuple_element_t<(std::is_placeholder<_Tp>::value - 1), _Tuple>&& std::_Mu<_Arg, false, true>::operator()(const volatile _Arg&, _Tuple&) const volatile [with _Tuple = _Tuple; _Arg = std::_Placeholder<1>][m[Kâ€™
[5.397s]   363 |         [01;36m[Koperator[m[K()(const volatile _Arg&, _Tuple& __tuple) const volatile
[5.397s]       |         [01;36m[K^~~~~~~~[m[K
[5.397s] [01m[K/usr/include/c++/11/functional:363:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.397s] /opt/ros/iron/include/rclcpp/rclcpp/timer.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™:
[5.397s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:273:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.397s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:270:3:[m[K   required from here
[5.398s] [01m[K/usr/include/c++/11/functional:531:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) volatile [with _Args = {_Args ...}; _Result = _Result; _Functor = void (cobotDriveMain::*)(); _Bound_args = {cobotDriveMain*, std::_Placeholder<1>}][m[Kâ€™
[5.398s]   531 |         [01;36m[Koperator[m[K()(_Args&&... __args) volatile
[5.398s]       |         [01;36m[K^~~~~~~~[m[K
[5.398s] [01m[K/usr/include/c++/11/functional:531:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.398s] /usr/include/c++/11/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [with _Fn = void (cobotDriveMain::* volatile)(); _CallArgs = std::tuple<>; _BArgs = {cobotDriveMain* volatile, volatile std::_Placeholder<1>}; _Functor = void (cobotDriveMain::*)(); _Bound_args = {cobotDriveMain*, std::_Placeholder<1>}][m[Kâ€™:
[5.398s] [01m[K/usr/include/c++/11/functional:475:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using _Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [with _CallArgs = std::tuple<>; __cv_quals = std::add_volatile; _Functor = void (cobotDriveMain::*)(); _Bound_args = {cobotDriveMain*, std::_Placeholder<1>}][m[Kâ€™
[5.398s] [01m[K/usr/include/c++/11/functional:528:9:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.399s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:273:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.399s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:270:3:[m[K   required from here
[5.399s] [01m[K/usr/include/c++/11/functional:460:13:[m[K [01;31m[Kerror: [m[Kno match for call to â€˜[01m[K(std::_Mu<std::_Placeholder<1>, false, true>) (volatile std::_Placeholder<1>&, std::tuple<>&)[m[Kâ€™
[5.399s]   460 |             [01;31m[K_Mu<typename remove_cv<_BoundArg>::type>()[m[K(
[5.399s]       |             [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[5.399s] [01m[K/usr/include/c++/11/functional:363:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tuple> std::_Safe_tuple_element_t<(std::is_placeholder<_Tp>::value - 1), _Tuple>&& std::_Mu<_Arg, false, true>::operator()(const volatile _Arg&, _Tuple&) const volatile [with _Tuple = _Tuple; _Arg = std::_Placeholder<1>][m[Kâ€™
[5.399s]   363 |         [01;36m[Koperator[m[K()(const volatile _Arg&, _Tuple& __tuple) const volatile
[5.400s]       |         [01;36m[K^~~~~~~~[m[K
[5.400s] [01m[K/usr/include/c++/11/functional:363:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.400s] /opt/ros/iron/include/rclcpp/rclcpp/timer.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™:
[5.400s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:273:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.400s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:270:3:[m[K   required from here
[5.400s] [01m[K/usr/include/c++/11/functional:543:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) const volatile [with _Args = {_Args ...}; _Result = _Result; _Functor = void (cobotDriveMain::*)(); _Bound_args = {cobotDriveMain*, std::_Placeholder<1>}][m[Kâ€™
[5.401s]   543 |         [01;36m[Koperator[m[K()(_Args&&... __args) const volatile
[5.401s]       |         [01;36m[K^~~~~~~~[m[K
[5.401s] [01m[K/usr/include/c++/11/functional:543:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.401s] /usr/include/c++/11/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [with _Fn = void (cobotDriveMain::* const volatile)(); _CallArgs = std::tuple<>; _BArgs = {cobotDriveMain* const volatile, const volatile std::_Placeholder<1>}; _Functor = void (cobotDriveMain::*)(); _Bound_args = {cobotDriveMain*, std::_Placeholder<1>}][m[Kâ€™:
[5.401s] [01m[K/usr/include/c++/11/functional:475:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using _Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [with _CallArgs = std::tuple<>; __cv_quals = std::add_cv; _Functor = void (cobotDriveMain::*)(); _Bound_args = {cobotDriveMain*, std::_Placeholder<1>}][m[Kâ€™
[5.401s] [01m[K/usr/include/c++/11/functional:540:9:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.402s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:273:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (cobotDriveMain::*(cobotDriveMain*, std::_Placeholder<1>))()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.402s] [01m[K/opt/ros/iron/include/rclcpp/rclcpp/timer.hpp:270:3:[m[K   required from here
[5.402s] [01m[K/usr/include/c++/11/functional:460:13:[m[K [01;31m[Kerror: [m[Kno match for call to â€˜[01m[K(std::_Mu<std::_Placeholder<1>, false, true>) (const volatile std::_Placeholder<1>&, std::tuple<>&)[m[Kâ€™
[5.402s]   460 |             [01;31m[K_Mu<typename remove_cv<_BoundArg>::type>()[m[K(
[5.402s]       |             [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[5.402s] [01m[K/usr/include/c++/11/functional:363:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tuple> std::_Safe_tuple_element_t<(std::is_placeholder<_Tp>::value - 1), _Tuple>&& std::_Mu<_Arg, false, true>::operator()(const volatile _Arg&, _Tuple&) const volatile [with _Tuple = _Tuple; _Arg = std::_Placeholder<1>][m[Kâ€™
[5.402s]   363 |         [01;36m[Koperator[m[K()(const volatile _Arg&, _Tuple& __tuple) const volatile
[5.403s]       |         [01;36m[K^~~~~~~~[m[K
[5.403s] [01m[K/usr/include/c++/11/functional:363:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.851s] In file included from [01m[K/workspace/ros2_ws/cobot_fds/include/cobot_drive_main.hpp:3[m[K,
[5.851s]                  from [01m[K/workspace/ros2_ws/cobot_fds/src/cobot_drive_main.cpp:22[m[K:
[5.851s] [01m[K/workspace/ros2_ws/cobot_fds/include/drive.h:47:17:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvector2d normalize(const vector2d&, double)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
[5.851s]    47 | static vector2d [01;35m[Knormalize[m[K(const vector2d& v, double len) {
[5.851s]       |                 [01;35m[K^~~~~~~~~[m[K
[5.900s] gmake[2]: *** [CMakeFiles/cobot_drive_main.dir/build.make:118: CMakeFiles/cobot_drive_main.dir/src/cobot_drive_main.cpp.o] Error 1
[5.900s] gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/cobot_drive_main.dir/all] Error 2
[5.901s] gmake: *** [Makefile:146: all] Error 2
[5.905s] Invoked command in '/workspace/ros2_ws/build/cobot_fds' returned '2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/iron /usr/bin/cmake --build /workspace/ros2_ws/build/cobot_fds -- -j8 -l8
